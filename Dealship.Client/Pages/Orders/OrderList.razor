@page "/orders"
@using Dealship.Shared
@using Dealship.Client.Services
@inject EntityApi<OrderDto,OrderFormDto> Api
@inject NavigationManager Nav
@inject IJSRuntime Js

<h3>Orders</h3>

<div class="d-flex mb-3">
    <input class="form-control me-2" @bind="qp.Search" @bind:event="oninput" placeholder="Search…"/>
    <button class="btn btn-outline-primary me-2" @onclick="()=>{qp.Page=1;_=Load();}">Search</button>
    <button class="btn btn-success ms-auto" @onclick='() => Nav.NavigateTo("/orders/edit")'>
        <i class="bi bi-plus-lg"></i> New
    </button>
</div>

@if(isLoading){<em>Loading…</em>}
else{
<table class="table">
<thead>
 <tr>
  <th @onclick='()=>Sort("OrderDate")'>Date @Arrow("OrderDate")</th>
  <th @onclick='()=>Sort("CustomerId")'>CustomerId @Arrow("CustomerId")</th>
  <th @onclick='()=>Sort("CarId")'>CarId @Arrow("CarId")</th>
  <th @onclick='()=>Sort("TotalPrice")'>Price @Arrow("TotalPrice")</th>
  <th></th>
 </tr>
</thead>
<tbody>
@foreach(var o in items){
 <tr>
  <td>@o.OrderDate.ToShortDateString()</td>
  <td>@o.CustomerId</td><td>@o.CarId</td><td>@o.TotalPrice</td>
  <td>
    <button class="btn btn-sm btn-primary me-1" @onclick='()=>Nav.NavigateTo($"/orders/edit/{o.Id}")'>Edit</button>
    <button class="btn btn-sm btn-danger" @onclick='()=>Delete(o.Id)'>Del</button>
  </td>
 </tr>}
</tbody></table>
<Pagination TotalItems="total" Page="qp.Page" Size="qp.Size"
            OnPageChanged="p=>{qp.Page=p;_=Load();}" />}
@code{
  QueryParams qp=new(); IEnumerable<OrderDto> items=Array.Empty<OrderDto>(); int total; bool isLoading;
  protected override async Task OnInitializedAsync()=>await Load();
  void Sort(string f){qp.Sort=qp.Sort==f?f+"_desc":f;qp.Page=1;_=Load();}
  MarkupString Arrow(string f)=> qp.Sort==f?(MarkupString)"<i class='bi bi-caret-up-fill'></i>":
      qp.Sort==f+"_desc"?(MarkupString)"<i class='bi bi-caret-down-fill'></i>":default;
  async Task Load(){isLoading=true;var r=await Api.GetPagedAsync(qp);items=r?.Items??items;total=r?.Total??0;isLoading=false;}
  async Task Delete(int id){if(await Js.InvokeAsync<bool>("confirm","Delete order?")){await Api.DeleteAsync(id);await Load();}}
}
